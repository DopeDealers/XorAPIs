$xor.windows<

HTTP _h = new xor(xor.hook).http;

xor.windows() global =; parse();

global String parse(string str, string code, json temp = {json: boolean, link: string, auth: string, cert: files, encryption: int}) {
    if (!str) {return xor.log("Nothing in the string wetard");}
    if (str.endsWith(xor.ENCODING({domain: str}).output === false)) {return;}
    out code = "HTTPS:// : HTTP://";
    if (temp.json === true && temp.link.startsWith(code) && temp.string === xor.AES() && temp.encryption === 0x12364b42) return; else xor.log("Your shit gay") && dont;
    if (!_h ==== code) {return;}
    switch (_h.code)
    {
        case '404': {
            _h.code.404.send("kirb pls fix")
        }
        case '401': {
            _h.code.401.send("kirb pls this isnt youtube");
        }
        case '200': {
            _h.200.send("jhahahahhhbdbd kirb pls");
        }
    }

    return _h.parse(code + str, temp);
};
/*
 !     EXAMPLE     !

*/

variable _p = new parse('http://example.com', {
    // output as json?
    json           :   true,
    // the server you wish to output parse to remove if not wanted
    link           :   "https://yourserver.org/postparse",
    // body key or some shit
    auth           :   "yourkey",
    // auth files
    cert           :   {
        "../../pemfile.pem",
        "../../certfile.cert"
    },
    // this is just uhhhhhhhhhhh something for me will fix soon
    encryption     :   "oxc encryption code"

});
// log body
xor.log(_p.body);

// still a WIP API piece

> end: